
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

dependencies {
  api 'org.aspectj:aspectjrt:1.9.6'
  api project(':hugo-annotations')

  testImplementation 'junit:junit:4.12'
}

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  defaultConfig {
    minSdkVersion 21
  }
}

android.libraryVariants.all { variant ->
  JavaCompile javaCompile = variant.javaCompile
  javaCompile.doLast {
    String[] args = [
        "-showWeaveInfo",
        "-1.5",
        "-inpath", javaCompile.destinationDir.toString(),
        "-aspectpath", javaCompile.classpath.asPath,
        "-d", javaCompile.destinationDir.toString(),
        "-classpath", javaCompile.classpath.asPath,
        "-bootclasspath", android.bootClasspath.join(File.pathSeparator)
    ]

    MessageHandler handler = new MessageHandler(true);
    new Main().run(args, handler)

    def log = project.logger
    for (IMessage message : handler.getMessages(null, true)) {
      switch (message.getKind()) {
        case IMessage.ABORT:
        case IMessage.ERROR:
        case IMessage.FAIL:
          log.error message.message, message.thrown
          break;
        case IMessage.WARNING:
        case IMessage.INFO:
          log.info message.message, message.thrown
          break;
        case IMessage.DEBUG:
          log.debug message.message, message.thrown
          break;
      }
    }
  }
}

uploadArchives{ //当前项目可以发布到本地文件夹中
  repositories {
    mavenDeployer {
      repository(url: LOCAL_REPO_URL) //定义本地maven仓库的地址
    }
  }
}

//推荐放在module的gradle依赖文件的最后面
publish {
  //userOrg这个是用户的组织，我们创建的是个人帐号，也就是我们的用户名（后续会介绍，必须一致，改成你自己的bintrayName）
  userOrg = POM_DEVELOPER_ID
  //我们的组id 类比'com.github.bumptech.glide:glide:3.7.0' 中的 com.github.bumptech.glide 这一部分
  groupId = GROUP
  //原型id 类比'com.github.bumptech.glide:glide:3.7.0' 中的glide这一部分
  artifactId = project.name
  //版本号 类比'com.github.bumptech.glide:glide:3.7.0' 中的3.7.0 这一部分。很重要，我们在更新aar文件的时候需要提升版本号，类似更新apk
  publishVersion = VERSION_NAME
  //描述，大致介绍自己的类库
  desc = POM_DESCRIPTION
  //网址，可以写自己的github项目页面等
  website = POM_URL
}